(()=>{"use strict";var n={56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],l=0;l<n.length;l++){var c=n[l],s=o.base?c[0]+o.base:c[0],d=a[s]||0,A="".concat(s," ").concat(d);a[s]=d+1;var u=t(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=r(p,o);o.byIndex=l,e.splice(l,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var l=t(a[i]);e[l].references--}for(var c=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var l=0;l<this.length;l++){var c=this[l][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},552:(n,e,t)=>{t.d(e,{A:()=>l});var o=t(354),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,'.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n}\n\n.new-game-container {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n}\n.game-status-container {\n  border: 2px solid #ccc;\n  padding: 15px;\n  text-align: center;\n  font-size: 1.2em;\n  font-weight: bold;\n}\n.title {\n  color: green;\n  font-size: 3em;\n}\n#newGameButton {\n  padding: 15px 30px;\n  font-size: 1.5em;\n  background-color:  #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.5);\n}\n\n#newGameButton:hover {\n  background-color: #45a049;\n}\n\n.hidden {\n  display: none;\n}\n\n.game-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 100px; /* Espacio entre los tableros */\n  width: 100%;\n  max-width: 1200px; /* Ancho máximo para el contenedor */\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.player-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  min-width: 350px; /* Ancho mínimo para el contenedor del jugador */\n}\n\n#computerBoard {\n  min-width: 350px; /* Ancho mínimo para el tablero de la computadora */\n}\n\n/* Estilo para el área entre los tableros */\n.game-info {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  min-width: 200px; /* Ancho mínimo para el área de información */\n}\n\n.gameboard {\n  border-collapse: collapse;\n  border-bottom: 1px solid black;\n  border-right: 1px solid black;\n  margin-right: 10px;\n}\n.gameboard th {\n  background-color: #eee;\n  font-weight: bold;\n  text-align: center;\n  padding: 5px;\n  border-right: 1px solid lightgray;\n  border-bottom: 1px solid lightgray;\n}\n.gameboard-cell {\n  width: 30px;\n  height: 30px;\n  border-top: 1px solid gray;\n  border-left: 1px solid gray;\n  border-right: none;\n  border-bottom: none;\n}\n#fleetButton {\n  padding: 10px 20px;\n  font-size: 1em;\n  background-color: blue;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.5);\n  cursor: pointer;\n}\n#fleetButton:hover {\n  background-color: rgb(0, 0, 182);\n}\n#fleetSelection {\n  margin-top: 20px;\n}\n.ship-option {\n  background-color: lightgray;\n  border: 1px solid gray;\n  height: fit-content;\n  padding: 5px;\n  margin-bottom: 5px;\n  cursor: pointer;\n  width: fit-content; /* Ajustar el ancho al contenido */\n}\n.ship-option:hover {\n  background-color: #ddd;\n}\n\n/* Ship Placement Modal styles */\n.modal {\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto; /* Habilitar scroll si el contenido es muy largo */\n  background-color: rgba(0, 0, 0, 0.4);\n}\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto; /* Vertical & and horizontal alignment */\n  padding: 20px;\n  border: 1px solid #888;\n  border-radius: 1.5rem;\n  box-shadow:  1px 2px 5px rgba(0, 0, 0, 0.4);\n  width: 80%;\n  max-width: 500px;\n}\n.close-button {\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n.close-button:hover,\n.close-button:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n.modal label {\n  display: block; /* Labels en líneas separadas */\n  margin-bottom: 5px;\n  margin-top: 10px;\n}\n.modal input[type="text"] {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n  box-sizing: border-box;\n}\n.radio-group {\n  margin-bottom: 15px;\n}\n.radio-group label {\n  display: inline-block;\n  margin-right: 15px;\n}\n#placeShipButtonModal {\n  padding: 10px 20px;\n  font-size: 1em;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n#placeShipButtonModal:hover {\n  background-color: #45a049;\n}\n\n/* Input coordinates error message styles */\n\n.error-message {\n  color: red;\n  font-size: 0.9em;\n  margin-top: 5px;\n  display: block;\n}\n\n/* Different cell styles */\n\n.ship-cell {\n  background-color: lightblue;\n}\n.hit-cell {\n  background-color: red;\n}\n.miss-cell {\n  background-color: rgb(147, 147, 147);\n}\n\n/* Tooltip styles */\n.coords-display {\n  background-color: rgba(0, 0, 0, 0.6);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-family: monospace;\n  font-size: 14px;\n  transition: all 0.2s ease;\n}',"",{version:3,sources:["webpack://./styles.css"],names:[],mappings:"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",sourcesContent:['.container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  padding: 0;\n}\n\n.new-game-container {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n}\n.game-status-container {\n  border: 2px solid #ccc;\n  padding: 15px;\n  text-align: center;\n  font-size: 1.2em;\n  font-weight: bold;\n}\n.title {\n  color: green;\n  font-size: 3em;\n}\n#newGameButton {\n  padding: 15px 30px;\n  font-size: 1.5em;\n  background-color:  #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.5);\n}\n\n#newGameButton:hover {\n  background-color: #45a049;\n}\n\n.hidden {\n  display: none;\n}\n\n.game-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 100px; /* Espacio entre los tableros */\n  width: 100%;\n  max-width: 1200px; /* Ancho máximo para el contenedor */\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.player-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  min-width: 350px; /* Ancho mínimo para el contenedor del jugador */\n}\n\n#computerBoard {\n  min-width: 350px; /* Ancho mínimo para el tablero de la computadora */\n}\n\n/* Estilo para el área entre los tableros */\n.game-info {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n  min-width: 200px; /* Ancho mínimo para el área de información */\n}\n\n.gameboard {\n  border-collapse: collapse;\n  border-bottom: 1px solid black;\n  border-right: 1px solid black;\n  margin-right: 10px;\n}\n.gameboard th {\n  background-color: #eee;\n  font-weight: bold;\n  text-align: center;\n  padding: 5px;\n  border-right: 1px solid lightgray;\n  border-bottom: 1px solid lightgray;\n}\n.gameboard-cell {\n  width: 30px;\n  height: 30px;\n  border-top: 1px solid gray;\n  border-left: 1px solid gray;\n  border-right: none;\n  border-bottom: none;\n}\n#fleetButton {\n  padding: 10px 20px;\n  font-size: 1em;\n  background-color: blue;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.5);\n  cursor: pointer;\n}\n#fleetButton:hover {\n  background-color: rgb(0, 0, 182);\n}\n#fleetSelection {\n  margin-top: 20px;\n}\n.ship-option {\n  background-color: lightgray;\n  border: 1px solid gray;\n  height: fit-content;\n  padding: 5px;\n  margin-bottom: 5px;\n  cursor: pointer;\n  width: fit-content; /* Ajustar el ancho al contenido */\n}\n.ship-option:hover {\n  background-color: #ddd;\n}\n\n/* Ship Placement Modal styles */\n.modal {\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  overflow: auto; /* Habilitar scroll si el contenido es muy largo */\n  background-color: rgba(0, 0, 0, 0.4);\n}\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto; /* Vertical & and horizontal alignment */\n  padding: 20px;\n  border: 1px solid #888;\n  border-radius: 1.5rem;\n  box-shadow:  1px 2px 5px rgba(0, 0, 0, 0.4);\n  width: 80%;\n  max-width: 500px;\n}\n.close-button {\n  color: #aaa;\n  float: right;\n  font-size: 28px;\n  font-weight: bold;\n}\n.close-button:hover,\n.close-button:focus {\n  color: black;\n  text-decoration: none;\n  cursor: pointer;\n}\n.modal label {\n  display: block; /* Labels en líneas separadas */\n  margin-bottom: 5px;\n  margin-top: 10px;\n}\n.modal input[type="text"] {\n  width: 100%;\n  padding: 8px;\n  margin-bottom: 10px;\n  box-sizing: border-box;\n}\n.radio-group {\n  margin-bottom: 15px;\n}\n.radio-group label {\n  display: inline-block;\n  margin-right: 15px;\n}\n#placeShipButtonModal {\n  padding: 10px 20px;\n  font-size: 1em;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n#placeShipButtonModal:hover {\n  background-color: #45a049;\n}\n\n/* Input coordinates error message styles */\n\n.error-message {\n  color: red;\n  font-size: 0.9em;\n  margin-top: 5px;\n  display: block;\n}\n\n/* Different cell styles */\n\n.ship-cell {\n  background-color: lightblue;\n}\n.hit-cell {\n  background-color: red;\n}\n.miss-cell {\n  background-color: rgb(147, 147, 147);\n}\n\n/* Tooltip styles */\n.coords-display {\n  background-color: rgba(0, 0, 0, 0.6);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 4px;\n  font-family: monospace;\n  font-size: 14px;\n  transition: all 0.2s ease;\n}'],sourceRoot:""}]);const l=i},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o=t(72),r=t.n(o),a=t(825),i=t.n(a),l=t(659),c=t.n(l),s=t(56),d=t.n(s),A=t(540),u=t.n(A),p=t(113),m=t.n(p),f=t(552),h={};h.styleTagTransform=m(),h.setAttributes=d(),h.insert=c().bind(null,"head"),h.domAPI=i(),h.insertStyleElement=u(),r()(f.A,h),f.A&&f.A.locals&&f.A.locals;var g=document.createElement("div");function y(n,e,t){console.log("--- Rendering board for: ".concat(e.id," ---")),console.log("Clearing container ".concat(e.id)),e.innerHTML="",console.log("Container ".concat(e.id," cleared"));var o=document.createElement("table");o.classList.add("gameboard");var r=[],a=document.createElement("tr");a.classList.add("header-row");var i=document.createElement("th");a.appendChild(i);for(var l=0;l<n.grid[0].length;l++){var c=document.createElement("th");c.textContent=l,a.appendChild(c)}o.appendChild(a);for(var s=function(a){var i=document.createElement("tr"),l=document.createElement("th");l.classList.add("row-header"),l.textContent=a,i.appendChild(l);for(var c=[],s=function(o){var r=document.createElement("td");r.classList.add("gameboard-cell"),r.dataset.row=a,r.dataset.col=o;var l=n.getCellState([a,o]),s=l;"computerBoard"===e.id&&"ship"===l&&(s="empty"),console.log("Estado a mostrar:",s),b(r,s),r.textContent="","hit"===s?r.textContent="💥":"miss"===s&&(r.textContent="⚪"),"computerBoard"===e.id&&(r.addEventListener("mouseover",(function(n){var e=n.target.dataset.row,t=n.target.dataset.col;g.textContent="[".concat(e,", ").concat(t,"]"),g.style.left="".concat(n.clientX+15,"px"),g.style.top="".concat(n.clientY+15,"px"),g.style.display="block"})),r.addEventListener("mouseout",(function(n){g.style.display="none"}))),"empty"===l||"ship"===l?(r.addEventListener("click",(function(n){var e=n.target.dataset.row,o=n.target.dataset.col;"function"==typeof t&&t(e,o)})),r.style.cursor="pointer"):r.style.cursor="not-allowed",r.addEventListener("dragover",(function(n){n.preventDefault()})),r.addEventListener("drop",(function(n){n.preventDefault(),console.log("Drop event triggered on cell:",a,o)})),i.appendChild(r),c.push(r)},d=0;d<n.grid[a].length;d++)s(d);o.appendChild(i),r.push(c)},d=0;d<n.grid.length;d++)s(d);n.cellElements=r,e.appendChild(o),console.log("Appended table to ".concat(e.id))}function b(n,e){switch(n.classList.remove("ship-cell","hit-cell","miss-cell"),e){case"ship":n.classList.add("ship-cell");break;case"hit":n.classList.add("hit-cell");break;case"miss":n.classList.add("miss-cell")}}function C(n){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},C(n)}function v(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var o,r,a,i,l=[],c=!0,s=!1;try{if(a=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(o=a.call(t)).done)&&(l.push(o.value),l.length!==e);c=!0);}catch(n){s=!0,r=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw r}}return l}}(n,e)||B(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function E(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=B(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var o=0,r=function(){};return{s:r,n:function(){return o>=n.length?{done:!0}:{done:!1,value:n[o++]}},e:function(n){throw n},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,l=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return i=n.done,n},e:function(n){l=!0,a=n},f:function(){try{i||null==t.return||t.return()}finally{if(l)throw a}}}}function B(n,e){if(n){if("string"==typeof n)return x(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?x(n,e):void 0}}function x(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=Array(e);t<e;t++)o[t]=n[t];return o}function k(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,w(o.key),o)}}function w(n){var e=function(n){if("object"!=C(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=C(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==C(e)?e:e+""}g.classList.add("coords-display"),g.style.position="fixed",g.style.display="none",g.style.zIndex="1000",g.style.pointerEvents="none",document.body.appendChild(g);var S=function(){return n=function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.ships=[],this.grid=Array(10).fill(null).map((function(){return Array(10).fill(null)})),this.attemptedPlacements=[]},(e=[{key:"placeShip",value:function(n,e,t){var o=I(n,e,t);this.validateShipPlacement(o),this.validateNoOverlap(o);var r,a=E(o);try{for(a.s();!(r=a.n()).done;){var i=v(r.value,2),l=i[0],c=i[1];this.grid[l][c]={ship:n,hit:!1}}}catch(n){a.e(n)}finally{a.f()}var s={ship:n,coordinates:e,isVertical:t};return this.ships.push(s),!0}},{key:"validateShipPlacement",value:function(n){var e,t=E(n);try{for(t.s();!(e=t.n()).done;){var o=v(e.value,2),r=o[0],a=o[1];if(r<0||r>9||a<0||a>9)throw new Error("Ship extends beyond the ".concat(a>9?"right":a<0?"left":r>9?"bottom":"top"," edge of the board"))}}catch(n){t.e(n)}finally{t.f()}}},{key:"validateNoOverlap",value:function(n){var e,t=E(n);try{for(t.s();!(e=t.n()).done;){var o,r=e.value,a=E(this.ships);try{for(a.s();!(o=a.n()).done;){var i,l=o.value,c=E(I(l.ship,l.coordinates,l.isVertical));try{for(c.s();!(i=c.n()).done;){var s=i.value;if(r[0]===s[0]&&r[1]===s[1])throw new Error("Cannot place ship here: overlaps with another ship")}}catch(n){c.e(n)}finally{c.f()}}}catch(n){a.e(n)}finally{a.f()}}}catch(n){t.e(n)}finally{t.f()}}},{key:"receiveAttack",value:function(n){var e=v(n,2),t=e[0],o=e[1];if(t<0||t>9||o<0||o>9)throw new Error("Invalid coordinates");var r=this.grid[t][o];return"miss"===r||r&&!0===r.hit?(console.log("Attack ignored: Already attacked here."),"already_attacked"):r&&r.ship?(r.hit=!0,r.ship.hit(),console.log("Ship hit!"),r.ship.isSunk()?(console.log("Ship sunk!"),"sunk"):"hit"):(this.grid[t][o]="miss",console.log("Attackmissed!"),"miss")}},{key:"areAllShipsSunk",value:function(){return this.ships.every((function(n){return n.ship.isSunk()}))}},{key:"getCellState",value:function(n){var e=v(n,2),t=e[0],o=e[1];if(t<0||t>9||o<0||o>9)return console.error("Invalid coordinates for getCellState"),"invalid";var r=this.grid[t][o];return"miss"===r?"miss":r&&!0===r.hit?"hit":r&&r.ship?"ship":"empty"}}])&&k(n.prototype,e),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e}();function I(n,e,t){var o=[],r=e[0],a=e[1],i=n.length;if(t)for(var l=0;l<i;l++)o.push([r+l,a]);else for(var c=0;c<i;c++)o.push([r,a+c]);return o}function M(n){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},M(n)}function P(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,j(o.key),o)}}function j(n){var e=function(n){if("object"!=M(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=M(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==M(e)?e:e+""}var L=function(){return n=function n(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.gameboard=t||new S,this.type=e,this.hitsMade=0,this.missesMade=0},t=[{key:"getShipLength",value:function(n){switch(n){case"carrier":return 5;case"battleship":return 4;case"destroyer":case"submarine":return 3;case"patrolBoat":return 2;default:throw new Error("Invalid ship type: ".concat(n))}}}],(e=[{key:"attack",value:function(n,e){n.receiveAttack(e)}},{key:"getRandomCoordsForBoard",value:function(n,e){for(var t,o=0,r=function(){var t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),a=Math.random()<.5;if(!I({length:e},[t,r],a).some((function(n){return n[0]<0||n[0]>9||n[1]<0||n[1]>9}))){if(!n||!n.attemptedPlacements)return console.log("Coordenadas válidas encontradas en el intento ".concat(o+1,": [").concat(t,", ").concat(r,"] ").concat(a?"vertical":"horizontal")),{v:{coords:[t,r],isVertical:a}};if(!n.attemptedPlacements.some((function(n){return n[0]===t&&n[1]===r})))return console.log("Coordenadas válidas encontradas en el intento ".concat(o+1,": [").concat(t,", ").concat(r,"] ").concat(a?"vertical":"horizontal")),{v:{coords:[t,r],isVertical:a}}}o++,console.log("Intento ".concat(o,"/").concat(50," fallido, coordenadas: [").concat(t,", ").concat(r,"] ").concat(a?"vertical":"horizontal"))};o<50;)if(t=r())return t.v;throw new Error("No se encontraron coordenadas válidas después de ".concat(50," intentos"))}},{key:"generateRandomAttack",value:function(n){for(var e=0,t=new Set;e<100;){var o=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),a="".concat(o,",").concat(r);if(!t.has(a)){t.add(a);var i=n.getCellState([o,r]);if("empty"===i||"ship"===i)return console.log("Computer AI chose valid attack: [".concat(o,", ").concat(r,"]")),[o,r];e++}}throw new Error("Computer AI failed to find a valid coordinate to attack after many attempts.")}}])&&P(n.prototype,e),t&&P(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e,t}();function T(n){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},T(n)}function Y(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,z(o.key),o)}}function z(n){var e=function(n){if("object"!=T(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=T(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==T(e)?e:e+""}var O=function(){return n=function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.player1=null,this.player2=null,this.gameboardPlayer1=null,this.gameboardPlayer2=null,this.currentPlayer=null},(e=[{key:"startGame",value:function(){this.gameboardPlayer1=new S,this.gameboardPlayer2=new S,this.player1=new L("Human",this.gameboardPlayer1),this.player2=new L("ai",this.gameboardPlayer2),this.currentPlayer=this.player1}},{key:"nextTurn",value:function(){this.currentPlayer===this.player1?this.currentPlayer=this.player2:this.currentPlayer=this.player1}}])&&Y(n.prototype,e),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e}();function V(n){return V="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},V(n)}function U(n,e){for(var t=0;t<e.length;t++){var o=e[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(n,D(o.key),o)}}function D(n){var e=function(n){if("object"!=V(n)||!n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var t=e.call(n,"string");if("object"!=V(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==V(e)?e:e+""}var Z=function(){return n=function n(e){if(function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e<=0)throw new Error("Ship's length must be grather than 0");this.length=e,this.hits=0,this.sunk=!1},(e=[{key:"hit",value:function(){return this.hits++,this.sunk=this.hits>=this.length,this.sunk}},{key:"isSunk",value:function(){return this.hits>=this.length}}])&&U(n.prototype,e),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,e}();function N(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=Array(e);t<e;t++)o[t]=n[t];return o}var R=document.getElementById("playerBoard"),W=document.getElementById("computerBoard"),q=document.getElementById("newGameButton"),G=document.getElementById("fleetButton"),F=document.getElementById("fleetSelection"),H=document.querySelectorAll(".ship-option"),X=document.getElementById("shipPlacementModal"),_=document.getElementById("closeModalButton"),J=document.getElementById("modalShipName"),$=document.getElementById("placeShipButtonModal"),K=null,Q=document.getElementById("coordinateError"),nn=0,en=document.getElementById("gameStatusContainer"),tn=document.getElementById("gameInfo"),on=document.getElementById("playerHitsCount"),rn=document.getElementById("playerMissesCount"),an=document.getElementById("computerHitsCount"),ln=document.getElementById("computerMissesCount"),cn=new O;window.gameInstance=cn,cn.startGame();var sn=cn.player2,dn=cn.player1,An=cn.gameboardPlayer2;function un(n){if(!n)return{isValid:!1,errorMessage:"Coordinate connot be empty"};var e=n.split(",").map((function(n){return n.trim()}));if(2!==e.length)return{isValid:!1,errorMessage:"Invalid format. Please use format 'x,y' (e.g. 5,5)"};var t=e[0],o=e[1],r=parseInt(t),a=parseInt(o);return isNaN(a)||isNaN(r)?{isValid:!1,errorMessage:"Invalid coordinates. X and Y must be numbers"}:a<0||a>9||r<0||r>9?{isValid:!1,errorMessage:"Coordinates out of range. X and Y must be between 0 and 9"}:{isValid:!0,errorMessage:""}}function pn(){var n,e,t,o,r=document.getElementById("coordinateInput"),a=document.getElementById("orientationVertical").checked,i=un(r.value);if(i.isValid){Q.classList.add("hidden");var l=(e=(n=r.value.split(",").map((function(n){return n.trim()})))[0],t=n[1],o=parseInt(t),[parseInt(e),o]);console.log("Parsed coordinates: ",l);var c=L.getShipLength(K),s=new Z(c);console.log("Orientation (vertical):",a);try{if(cn.gameboardPlayer1.placeShip(s,l,a)){console.log("".concat(K," placed successfully!"),cn.gameboardPlayer1.ships);var d=I(s,l,a);document.getElementById("ship-option-".concat(K)).remove(),d.forEach((function(n){var e,t,o=(t=2,function(n){if(Array.isArray(n))return n}(e=n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var o,r,a,i,l=[],c=!0,s=!1;try{if(a=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;c=!1}else for(;!(c=(o=a.call(t)).done)&&(l.push(o.value),l.length!==e);c=!0);}catch(n){s=!0,r=n}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw r}}return l}}(e,t)||function(n,e){if(n){if("string"==typeof n)return N(n,e);var t={}.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?N(n,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),r=o[0],a=o[1];b(cn.gameboardPlayer1.cellElements[r][a],"ship")})),nn++,X.classList.add("hidden"),r.value="",Q.classList.add("hidden"),5===nn&&(console.log("Player start to attack!"),G.classList.add("hidden"),document.getElementById("fleetSelection").remove(),en.classList.remove("hidden"),en.textContent="Your Turn to Attack!",tn.style.display="block",W.classList.remove("hidden"),function(n){var e=cn.player2;["carrier","battleship","destroyer","submarine","patrolBoat"].forEach((function(t){for(var o=!1;!o;)try{var r=L.getShipLength(t),a=e.getRandomCoordsForBoard(n,r),i=new Z(r);console.log("Intentando colocar ".concat(t," en [").concat(a.coords[0],", ").concat(a.coords[1],"] ").concat(a.isVertical?"vertical":"horizontal")),!0===n.placeShip(i,a.coords,a.isVertical)&&(o=!0,console.log("Computer placed ".concat(t," at [").concat(a.coords[0],", ").concat(a.coords[1],"] ").concat(a.isVertical?"vertically":"horizontally")))}catch(n){console.error("Computer AI placement failed for ".concat(t,":"),n.message)}})),console.log("".concat(cn.player2," placed fleet successfully!")),console.log("".concat(cn.player1," start to attack!"))}(An),updateScoreDsiplays())}}catch(n){console.error("Ship placement error:",n.message),Q.textContent=n.message,Q.classList.remove("hidden")}}else Q.textContent=i.errorMessage,Q.classList.remove("hidden")}function mn(){on.textContent=cn.player1.hitsMade,rn.textContent=cn.player1.missesMade,an.textContent=cn.player2.hitsMade,ln.textContent=cn.player2.missesMade}q.addEventListener("click",(function(){console.log("Mostrando tablero de jugador..."),R.classList.remove("hidden"),G.classList.remove("hidden"),q.classList.add("hidden")})),G.addEventListener("click",(function(){console.log("Mostrando flota de jugador a colocar..."),G.classList.add("hidden"),F.classList.remove("hidden")})),H.forEach((function(n){n.addEventListener("click",(function(e){var t=n.dataset.shipType;J.textContent=t.charAt(0).toUpperCase()+t.slice(1),Q.classList.add("hidden"),document.getElementById("coordinateInput").value="",X.classList.remove("hidden"),K=t}))})),_.addEventListener("click",(function(){X.classList.add("hidden"),Q.classList.add("hidden"),document.getElementById("coordinateInput").value=""})),$.addEventListener("click",(function(){pn()})),document.getElementById("coordinateInput").addEventListener("input",(function(){un(document.getElementById("coordinateInput").value).isValid&&Q.classList.add("hidden")})),y(cn.gameboardPlayer1,R),y(An,W,(function n(e,t){console.log("handlePlayerAttack: Attacking [".concat(e,", ").concat(t,"] on computerBoard"));var o=parseInt(e),r=parseInt(t),a=An.receiveAttack([o,r]);console.log("Attack result: ",a),"hit"===a||"sunk"===a?cn.player1.hitsMade++:"miss"===a&&cn.player1.missesMade++,mn(),console.log("handlePlayerAttack: Calling renderGameboard for computerBoard UPDATE"),y(An,W,n);var i=An.areAllShipsSunk();if(console.log("Checking if player won:",i),i)return alert("Victoria para ".concat(dn,"!")),void console.log("Game Over - Player Wins!");console.log("".concat(dn," turn ended. Scheduling computer turn...")),en.textContent="Computer's Turn...",y(An,W,null),setTimeout((function(){var e;console.log("--- Computer's Turn START ---");try{e=sn.generateRandomAttack(dn.gameboard),console.log("Computer targets: [".concat(e[0],", ").concat(e[1],"]"));var t=dn.gameboard.receiveAttack(e);console.log("Computer attack result: ".concat(t?"hit":"miss")),"hit"===t||"sunk"===t?cn.player2.hitsMade++:"miss"===t&&cn.player2.missesMade++,mn(),console.log("Updating player's board UI..."),y(dn.gameboard,R,null);var o=dn.gameboard.areAllShipsSunk();console.log("Checking if computer won:",o),o?(alert("Victoria para ".concat(sn,"!")),console.log("Game Over - Computer Wins!"),en.textContent="Computer Wins!"):(console.log("--- Computer's Turn END ---"),console.log("Returning turn to player..."),en.textContent="Your Turn to Attack!",y(An,W,n))}catch(e){console.error("".concat(sn," couldn't find a valid coordinate to attack"),e),console.log("--- Computer's Turn END (Failed to find target) ---"),console.log("Returning turn to player..."),en.textContent="Your Turn to Attack!",y(An,W,n)}}),1e3)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,